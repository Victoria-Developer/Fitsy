// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../entities/meal_plan_entity.dart';
import '../entities/recipe_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 6593502449897551958),
      name: 'MealPlanEntity',
      lastPropertyId: const obx_int.IdUid(2, 959300171045859789),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8737768684642307200),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 959300171045859789),
            name: 'dayId',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'recipes', srcEntity: 'RecipeEntity', srcField: 'mealPlan')
      ]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 8716676049111621615),
      name: 'RecipeEntity',
      lastPropertyId: const obx_int.IdUid(7, 3980338306786492739),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1098351602566429511),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8358739920385078704),
            name: 'recipeId',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3916790370975533893),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 9072000123215698101),
            name: 'instructions',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2929854740120179734),
            name: 'calories',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4141253335937653190),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3980338306786492739),
            name: 'mealPlanId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 5783639048532475278),
            relationTarget: 'MealPlanEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 8716676049111621615),
      lastIndexId: const obx_int.IdUid(1, 5783639048532475278),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    MealPlanEntity: obx_int.EntityDefinition<MealPlanEntity>(
        model: _entities[0],
        toOneRelations: (MealPlanEntity object) => [],
        toManyRelations: (MealPlanEntity object) => {
              obx_int.RelInfo<RecipeEntity>.toOneBacklink(7, object.id,
                      (RecipeEntity srcObject) => srcObject.mealPlan):
                  object.recipes
            },
        getId: (MealPlanEntity object) => object.id,
        setId: (MealPlanEntity object, int id) {
          object.id = id;
        },
        objectToFB: (MealPlanEntity object, fb.Builder fbb) {
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.dayId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final dayIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final recipesParam = obx.ToMany<RecipeEntity>();
          final object = MealPlanEntity(
              dayId: dayIdParam, recipes: recipesParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<MealPlanEntity>(
              object.recipes,
              store,
              obx_int.RelInfo<RecipeEntity>.toOneBacklink(7, object.id,
                  (RecipeEntity srcObject) => srcObject.mealPlan));
          return object;
        }),
    RecipeEntity: obx_int.EntityDefinition<RecipeEntity>(
        model: _entities[1],
        toOneRelations: (RecipeEntity object) => [object.mealPlan],
        toManyRelations: (RecipeEntity object) => {},
        getId: (RecipeEntity object) => object.id,
        setId: (RecipeEntity object, int id) {
          object.id = id;
        },
        objectToFB: (RecipeEntity object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final instructionsOffset = object.instructions == null
              ? null
              : fbb.writeString(object.instructions!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.recipeId);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, instructionsOffset);
          fbb.addInt64(4, object.calories);
          fbb.addFloat64(5, object.price);
          fbb.addInt64(6, object.mealPlan.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final recipeIdParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final instructionsParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final caloriesParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final priceParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 14);
          final object = RecipeEntity(
              recipeId: recipeIdParam,
              name: nameParam,
              instructions: instructionsParam,
              calories: caloriesParam,
              price: priceParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          object.mealPlan.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          object.mealPlan.attach(store);
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [MealPlanEntity] entity fields to define ObjectBox queries.
class MealPlanEntity_ {
  /// See [MealPlanEntity.id].
  static final id =
      obx.QueryIntegerProperty<MealPlanEntity>(_entities[0].properties[0]);

  /// See [MealPlanEntity.dayId].
  static final dayId =
      obx.QueryIntegerProperty<MealPlanEntity>(_entities[0].properties[1]);

  /// see [MealPlanEntity.recipes]
  static final recipes = obx.QueryBacklinkToMany<RecipeEntity, MealPlanEntity>(
      RecipeEntity_.mealPlan);
}

/// [RecipeEntity] entity fields to define ObjectBox queries.
class RecipeEntity_ {
  /// See [RecipeEntity.id].
  static final id =
      obx.QueryIntegerProperty<RecipeEntity>(_entities[1].properties[0]);

  /// See [RecipeEntity.recipeId].
  static final recipeId =
      obx.QueryIntegerProperty<RecipeEntity>(_entities[1].properties[1]);

  /// See [RecipeEntity.name].
  static final name =
      obx.QueryStringProperty<RecipeEntity>(_entities[1].properties[2]);

  /// See [RecipeEntity.instructions].
  static final instructions =
      obx.QueryStringProperty<RecipeEntity>(_entities[1].properties[3]);

  /// See [RecipeEntity.calories].
  static final calories =
      obx.QueryIntegerProperty<RecipeEntity>(_entities[1].properties[4]);

  /// See [RecipeEntity.price].
  static final price =
      obx.QueryDoubleProperty<RecipeEntity>(_entities[1].properties[5]);

  /// See [RecipeEntity.mealPlan].
  static final mealPlan = obx.QueryRelationToOne<RecipeEntity, MealPlanEntity>(
      _entities[1].properties[6]);
}
